from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Initial activities
send_notification = gen.activity('Send notification')
prepare_financial_statements = gen.activity('Prepare financial statements')
gather_necessary_documents = gen.activity('Gather necessary documents')
check_regulatory_updates = gen.activity('Check regulatory updates')

# Document preparation and regulatory review
document_preparation = gen.partial_order(dependencies=[(prepare_financial_statements,), (gather_necessary_documents,)])
review_and_preparation = gen.partial_order(dependencies=[(document_preparation,), (check_regulatory_updates,)])

submit_documents = gen.activity('Submit documents')

# Review and clarification loop
review_submission = gen.activity('Review submission')
request_clarifications = gen.activity('Request clarifications of discrepancies')
receive_clarifications = gen.activity('Receive clarifications')
clarification_loop = gen.loop(do=review_submission, redo=gen.partial_order(dependencies=[(request_clarifications, receive_clarifications)]))

# Risk assessment
evaluate_financial_risks = gen.activity('Evaluate financial risks')
evaluate_operational_risks = gen.activity('Evaluate operational risks')
evaluate_compliance_risks = gen.activity('Evaluate compliance risks')

risk_evaluation = gen.partial_order(dependencies=[(evaluate_financial_risks,), (evaluate_operational_risks,), (evaluate_compliance_risks,)])

launch_detailed_investigation = gen.activity('Launch detailed investigation')
conduct_data_analysis = gen.activity('Conduct data analysis')
conduct_interviews = gen.activity('Conduct interviews')
perform_site_visits = gen.activity('Perform site visits')
optional_site_visits = gen.xor(perform_site_visits, None)

detailed_investigation = gen.partial_order(dependencies=[(launch_detailed_investigation,), (conduct_data_analysis,), (conduct_interviews,), (optional_site_visits,)])
optional_detailed_investigation = gen.xor(detailed_investigation, None)

complete_risk_assessment = gen.partial_order(dependencies=[(risk_evaluation, optional_detailed_investigation), (optional_detailed_investigation, gen.activity('Complete risk assessment/mitigation'))])



# Report compilation and review
compile_audit_report = gen.activity('Compile audit report')
review_report = gen.activity('Review report by audit director')
approve_report = gen.activity('Approve report')
send_report_for_revision = gen.activity('Send report for revision')
update_and_resubmit_report = gen.activity('Update and resubmit report')

report_review_loop = gen.loop(do=review_report, redo=gen.partial_order(dependencies=[(send_report_for_revision, update_and_resubmit_report)]))
report_cycle = gen.partial_order(dependencies=[(compile_audit_report, report_review_loop), (report_review_loop, approve_report)])


# Finalization
distribute_final_report = gen.activity('Distribute final report')
archive_report = gen.activity('Archive report')
distribution_and_archival = gen.partial_order(dependencies=[(distribute_final_report,), (archive_report,)])


close_audit_process = gen.activity('Close audit process')

# Main process flow
final_model = gen.partial_order(dependencies=[
    (send_notification, review_and_preparation),
    (review_and_preparation, submit_documents),
    (submit_documents, clarification_loop),
    (clarification_loop, complete_risk_assessment),
    (complete_risk_assessment, report_cycle),
    (report_cycle, distribution_and_archival),
    (distribution_and_archival, close_audit_process)
])