from utils.model_generation import ModelGenerator

gen = ModelGenerator()

file_complaint = gen.activity('File complaint')
log_complaint = gen.activity('Log complaint')
assign_complaint = gen.activity('Assign complaint to relevant department')
review_complaint = gen.activity('Review complaint details')
approve_notify = gen.activity('Approve and notify customer')
reject_notify = gen.activity('Reject and notify customer')
process_reimbursement = gen.activity('Process reimbursement')
resolve_complaint = gen.activity('Resolve complaint')
provide_feedback = gen.activity('Provide feedback')


# Create separate copies of resolve_complaint for each branch
resolve_complaint_approved = resolve_complaint.copy()
resolve_complaint_rejected = resolve_complaint.copy()

refund_approved = gen.partial_order(dependencies=[
    (approve_notify,), (process_reimbursement,), (resolve_complaint_approved,)
])

refund_rejected = gen.partial_order(dependencies=[
    (reject_notify,), (resolve_complaint_rejected,)
])


choice_refund = gen.xor(refund_approved, refund_rejected)

main_process = gen.partial_order(dependencies=[
    (file_complaint, log_complaint),
    (log_complaint, assign_complaint),
    (assign_complaint, review_complaint),
    (review_complaint, choice_refund),
    (choice_refund, provide_feedback)
])

final_model = main_process