from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Initial steps
submit_application = gen.activity('Submit application online')
review_application = gen.activity('Review application and documents')
notify_missing_docs = gen.activity('Notify applicant of missing documents')
provide_missing_docs = gen.activity('Provide missing documents')
missing_docs_loop = gen.loop(do=notify_missing_docs, redo=provide_missing_docs)
evaluate_application = gen.activity('Evaluate application by admissions committee')
process_fees = gen.activity('Process fees or waivers')

# Acceptance/Rejection
send_acceptance = gen.activity('Send acceptance letter')
send_rejection = gen.activity('Send rejection letter')
acceptance_rejection = gen.xor(send_acceptance, send_rejection)

# Enrollment Confirmation
confirm_enrollment = gen.activity('Confirm enrollment')
cancel_application = gen.activity('Cancel application')
enrollment_confirmation = gen.xor(confirm_enrollment, cancel_application)

# Post-Acceptance
send_orientation = gen.activity('Send orientation materials')
setup_it = gen.activity('Set up IT accounts')
assist_visa = gen.activity('Assist with visa processing')
optional_visa = gen.xor(assist_visa, None)
obtain_id = gen.activity('Obtain student ID card')

# Study Plan
meet_advisor = gen.activity('Meet with academic advisor')
select_courses = gen.activity('Select courses')
resolve_conflicts = gen.activity('Resolve schedule conflicts')
study_plan = gen.partial_order(dependencies=[(meet_advisor,), (select_courses,), (resolve_conflicts,)])


# Semester Activities
begin_classes = gen.activity('Begin attending classes')
add_drop_courses = gen.activity('Add/drop courses')
optional_add_drop = gen.xor(add_drop_courses, None)
post_grades = gen.activity('Post grades')
review_grades = gen.activity('Review grades online')

# Grade Appeal
submit_appeal = gen.activity('Submit appeal form')
meet_appeals = gen.activity('Meet with appeals committee')
await_decision = gen.activity('Await decision')
grade_appeal = gen.partial_order(dependencies=[(submit_appeal, meet_appeals), (meet_appeals, await_decision)])
optional_appeal = gen.xor(grade_appeal, None)


semester_activities = gen.partial_order(dependencies=[(begin_classes, optional_add_drop), (optional_add_drop, post_grades), (post_grades, review_grades), (review_grades, optional_appeal)])

semester_loop = gen.loop(do=semester_activities, redo=None)

graduate_withdraw = gen.xor(gen.activity('Graduate'), gen.activity('Withdraw'))


post_enrollment = gen.partial_order(dependencies=[(send_orientation,), (setup_it,), (optional_visa,), (obtain_id, study_plan), (study_plan, semester_loop), (semester_loop, graduate_withdraw)])

accepted_path = gen.partial_order(dependencies=[(enrollment_confirmation, post_enrollment)])


# Combine all parts
final_model = gen.partial_order(
    dependencies=[
        (submit_application, review_application),
        (review_application, missing_docs_loop),
        (missing_docs_loop, evaluate_application),
        (evaluate_application, process_fees),
        (process_fees, acceptance_rejection),
        (acceptance_rejection, accepted_path)
    ]
)