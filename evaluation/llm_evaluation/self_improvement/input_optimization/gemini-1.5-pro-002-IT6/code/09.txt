from utils.model_generation import ModelGenerator

gen = ModelGenerator()

identify_idea = gen.activity('Identify idea for new product or improvement')
conduct_initial_research = gen.activity('Conduct initial research')
conduct_feasibility_studies = gen.activity('Conduct feasibility studies')
research_studies = gen.partial_order(dependencies=[(conduct_initial_research,), (conduct_feasibility_studies,)])

draft_design_concepts = gen.activity('Draft design concepts')
select_promising_design = gen.activity('Select promising design')

build_prototype = gen.activity('Build prototype')

test_functionality = gen.activity('Test functionality')
test_safety = gen.activity('Test safety')
test_market_potential = gen.activity('Test market potential')
testing = gen.partial_order(dependencies=[(test_functionality,), (test_safety,), (test_market_potential,)])

collect_feedback = gen.activity('Collect feedback from testing phase')

refine_prototype = gen.activity('Refine prototype')

approve_prototype = gen.activity('Approve prototype for further development')
discard_prototype = gen.activity('Discard prototype')
final_choice = gen.xor(approve_prototype, discard_prototype)



testing_and_feedback = gen.partial_order(dependencies=[(testing, collect_feedback)])

refine_loop = gen.loop(do=testing_and_feedback, redo=refine_prototype)

post_testing = gen.xor(refine_loop, testing_and_feedback.copy())



final_model = gen.partial_order(dependencies=[(identify_idea, research_studies), (research_studies, draft_design_concepts),
                                               (draft_design_concepts, select_promising_design),
                                               (select_promising_design, build_prototype),
                                               (build_prototype, post_testing),
                                               (post_testing, final_choice)])