from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
identify_need = gen.activity('Identify need for new hire')
create_jd = gen.activity('Create job description')
post_jd = gen.activity('Post job description')
collect_resumes = gen.activity('Collect resumes')
screen_resumes = gen.activity('Screen resumes')
phone_screens = gen.activity('Conduct initial phone interviews')
invite_interviews = gen.activity('Invite candidates for interviews')
in_person_interview = gen.activity('Conduct an in-person interview')
virtual_interview = gen.activity('Conduct a virtual interview')
choose_candidate = gen.activity('Choose candidate')
extend_offer = gen.activity('Extend offer')
negotiate_salary = gen.xor(gen.activity('Negotiate salary'), None) # Salary negotiation is optional
begin_onboarding = gen.activity('Begin onboarding process')
complete_paperwork = gen.activity('Complete paperwork')
complete_orientation = gen.activity('Complete orientation')
complete_training = gen.activity('Complete training')


# Subprocesses and Loops
interview_loop = gen.loop(do=gen.xor(in_person_interview.copy(), virtual_interview.copy()), redo=None) # Multiple interview rounds possible, use copies to avoid reuse error

onboarding_process = gen.partial_order(dependencies=[
    (begin_onboarding.copy(), complete_paperwork),
    (begin_onboarding.copy(), complete_orientation),
    (begin_onboarding.copy(), complete_training),
    (complete_paperwork, None), #Paperwork can be done anytime
    (complete_orientation, None), #Orientation can be done anytime
    (complete_training, None) #Training can be done anytime
])

# Combining subprocesses
initial_steps = gen.partial_order(dependencies=[
    (identify_need, create_jd),
    (create_jd, post_jd),
    (post_jd, collect_resumes),
    (collect_resumes, screen_resumes),
    (screen_resumes, phone_screens),
    (phone_screens, invite_interviews),
    (invite_interviews, interview_loop),
    (interview_loop, choose_candidate.copy()),
])


offer_and_onboarding = gen.partial_order(dependencies=[
    (choose_candidate.copy(), extend_offer),
    (extend_offer, negotiate_salary),
    (negotiate_salary, begin_onboarding.copy()), #Conditional dependency, only if offer is accepted
])

# Final Model
final_model = gen.partial_order(dependencies=[(initial_steps, offer_and_onboarding), (offer_and_onboarding, onboarding_process)])