from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Initial steps
send_notification = gen.activity('Send notification')
prepare_financial_statements = gen.activity('Prepare financial statements')
gather_necessary_documents = gen.activity('Gather necessary documents')
check_regulatory_updates = gen.activity('Check regulatory updates')

# Document preparation and submission
prepare_documents = gen.partial_order(dependencies=[(prepare_financial_statements, ), (gather_necessary_documents, )])
document_handling = gen.partial_order(dependencies=[(prepare_documents, ), (check_regulatory_updates, )])
submit_documents = gen.activity('Submit documents')
submit_process = gen.partial_order(dependencies=[(document_handling, submit_documents)])

# Review and clarification loop
review_submission = gen.activity('Review submission')
request_clarifications = gen.activity('Request clarifications of discrepancies')
receive_clarifications = gen.activity('Receive clarifications')
clarification_loop = gen.loop(do=request_clarifications, redo=receive_clarifications)
review_clarification = gen.partial_order(dependencies=[(review_submission, clarification_loop)])


# Risk assessment
evaluate_financial_risks = gen.activity('Evaluate financial risks')
evaluate_operational_risks = gen.activity('Evaluate operational risks')
evaluate_compliance_risks = gen.activity('Evaluate compliance risks')
risk_assessment_tasks = gen.partial_order(dependencies=[(evaluate_financial_risks,), (evaluate_operational_risks,), (evaluate_compliance_risks,)])
complete_risk_assessment = gen.activity('Complete risk assessment/mitigation')
risk_assessment = gen.partial_order(dependencies=[(risk_assessment_tasks, complete_risk_assessment)])

# Investigation (optional)
launch_detailed_investigation = gen.activity('Launch detailed investigation')
conduct_data_analysis = gen.activity('Conduct data analysis')
conduct_interviews = gen.activity('Conduct interviews')
perform_site_visits = gen.activity('Perform site visits')
optional_site_visit = gen.xor(perform_site_visits, None)
investigation_tasks = gen.partial_order(dependencies=[(conduct_data_analysis, ), (conduct_interviews, ), (optional_site_visit, )])
investigation = gen.partial_order(dependencies=[(launch_detailed_investigation, investigation_tasks)])
optional_investigation = gen.xor(investigation, None)



# Report compilation and review loop
compile_audit_report = gen.activity('Compile audit report')
review_report = gen.activity('Review report by audit director')
send_for_revision = gen.activity('Send report for revision')
update_and_resubmit = gen.activity('Update and resubmit report')

revision_loop = gen.loop(do=send_for_revision, redo=update_and_resubmit)
review_revision = gen.xor(review_report, revision_loop)



# Finalization and closure
approve_report = gen.activity('Approve report')
distribute_final_report = gen.activity('Distribute final report')
archive_report = gen.activity('Archive report')
distribution_archival = gen.partial_order(dependencies=[(distribute_final_report, ), (archive_report, )])

close_audit_process = gen.activity('Close audit process')


# Main process flow
main_process = gen.partial_order(dependencies=[
    (send_notification, submit_process),
    (submit_process, review_clarification),
    (review_clarification, risk_assessment),
    (risk_assessment, optional_investigation),
    (optional_investigation, compile_audit_report),
    (compile_audit_report, review_revision),
    (review_revision, approve_report),
    (approve_report, distribution_archival),
    (distribution_archival, close_audit_process)
])


final_model = main_process