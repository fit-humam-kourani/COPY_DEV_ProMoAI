from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Define the activities
identify_need = gen.activity('Identify need for new supplier or vendor')
issue_rfp = gen.activity('Issue request for proposals (RFP)')
receive_proposals = gen.activity('Receive supplier proposals')
evaluate_proposal = gen.activity('Evaluate proposal')
conduct_site_visit = gen.activity('Conduct site visit')
conduct_interview = gen.activity('Conduct interview')
select_supplier = gen.activity('Select supplier')
begin_negotiations = gen.activity('Begin contract negotiations')
sign_contract = gen.activity('Sign contract')
execute_contract = gen.activity('Execute contract')
onboard_supplier = gen.activity('Onboard supplier')

# Optional site visit or interview process
optional_evaluation_steps = gen.xor(
    conduct_site_visit, conduct_interview, None
)

# Evaluation process, including optional steps
evaluation_process = gen.partial_order(
    dependencies=[(evaluate_proposal, optional_evaluation_steps), (optional_evaluation_steps, select_supplier)]
)

# Contract and onboarding process
contract_process = gen.partial_order(
    dependencies=[(begin_negotiations, sign_contract), (sign_contract, execute_contract), (execute_contract, onboard_supplier)]
)

# Full process flow
final_model = gen.partial_order(
    dependencies=[
        (identify_need, issue_rfp),
        (issue_rfp, receive_proposals),
        (receive_proposals, evaluation_process),
        (evaluation_process, contract_process)
    ]
)