from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Define activities
define_objectives = gen.activity('Define campaign objectives')
create_content = gen.activity('Create content')
design_visuals = gen.activity('Design visuals')
select_channels = gen.activity('Select promotion channels')
launch_campaign = gen.activity('Launch campaign')
track_performance = gen.activity('Track performance in real-time')
collect_leads = gen.activity('Collect leads in CRM system')
sales_follow_up = gen.activity('Sales teams follows up on leads')
campaign_ends = gen.activity('Campaign period ends')
analyze_performance = gen.activity('Analyze performance for future optimization')

# Content creation subprocess
content_creation_poset = gen.partial_order(dependencies=[(create_content, design_visuals), (design_visuals, select_channels)])

# Main process flow
final_model = gen.partial_order(
    dependencies=[
        (define_objectives, content_creation_poset),
        (content_creation_poset, launch_campaign),
        (launch_campaign, track_performance),
        (track_performance, collect_leads),
        (collect_leads, sales_follow_up),
        (campaign_ends, analyze_performance)
    ]
)