from utils.model_generation import ModelGenerator
gen = ModelGenerator()

# Initial activities
send_notification = gen.activity('Send notification')
prepare_statements = gen.activity('Prepare financial statements')
gather_documents = gen.activity('Gather necessary documents')
check_updates = gen.activity('Check regulatory updates')

# Concurrent preparation
regional_prep = gen.partial_order(dependencies=[(prepare_statements, gather_documents), (check_updates,)])

# Document submission and review
submit_documents = gen.activity('Submit documents')
review_submission = gen.activity('Review submission')
request_clarifications = gen.activity('Request clarifications of discrepancies')
receive_clarifications = gen.activity('Receive clarifications')

# Clarification loop if discrepancies are found
clarification_loop = gen.loop(do=request_clarifications, redo=receive_clarifications)

# Risk assessment
evaluate_financial_risks = gen.activity('Evaluate financial risks')
evaluate_operational_risks = gen.activity('Evaluate operational risks')
evaluate_compliance_risks = gen.activity('Evaluate compliance risks')

risk_assessment = gen.partial_order(dependencies=[
    (evaluate_financial_risks,), 
    (evaluate_operational_risks,), 
    (evaluate_compliance_risks,)
])

# High-risk detailed investigation
data_analysis = gen.activity('Conduct data analysis')
conduct_interviews = gen.activity('Conduct interviews')
perform_site_visits = gen.activity('Perform site visits')

detailed_investigation = gen.partial_order(dependencies=[
    (data_analysis,), 
    (conduct_interviews,), 
    (perform_site_visits,)
])

high_risk_investigation = gen.xor(detailed_investigation, None)

# Risk assessment with optional investigation
complete_risk_assessment = gen.partial_order(dependencies=[(risk_assessment, high_risk_investigation)])

# Audit report compilation and review
compile_report = gen.activity('Compile audit report')
review_report = gen.activity('Review report by audit director')
send_for_revision = gen.activity('Send report for revision')
update_resubmit_report = gen.activity('Update and resubmit report')

# Revision loop if the report is not approved
revision_loop = gen.loop(do=send_for_revision, redo=update_resubmit_report)

# Final report distribution and archival
distribute_report = gen.activity('Distribute final report')
archive_report = gen.activity('Archive report')
close_audit_process = gen.activity('Close audit process')

# Define the main process structure
initial_steps = gen.partial_order(dependencies=[
    (send_notification, regional_prep),
    (regional_prep, submit_documents),
    (submit_documents, review_submission),
    (review_submission, clarification_loop),
    (clarification_loop, complete_risk_assessment),
    (complete_risk_assessment, compile_report),
    (compile_report, revision_loop),
    (revision_loop, review_report),
    (review_report, distribute_report),
    (distribute_report, archive_report),
    (archive_report, close_audit_process)
])

# Final model
final_model = initial_steps