from utils.model_generation import ModelGenerator

gen = ModelGenerator()

receive_inquiry = gen.activity('Receive customer inquiry')
collect_information = gen.activity('Collect customer information')
address_concerns = gen.activity('Address customer concerns or questions')

information_gathering = gen.partial_order(dependencies=[(collect_information,), (address_concerns,)])

guide_customer = gen.activity('Guide customer in selecting product/service')
provide_quote = gen.activity('Provide quote')
customer_approves_quote = gen.xor(gen.activity('Customer approves quote'), None) # Explicitly model customer approval
place_order = gen.activity('Place order')
record_order = gen.activity('Record order in system')
send_confirmation = gen.activity('Send order confirmation to customer')


interested_path = gen.partial_order(
    dependencies=[
        (guide_customer, provide_quote),
        (provide_quote, customer_approves_quote), # Include approval step
        (customer_approves_quote, place_order), # Order placement conditional on approval
        (place_order, record_order),
        (record_order, send_confirmation)
    ]
)

not_interested_path = None # Implicitly handled by xor

choice = gen.xor(interested_path, not_interested_path)


final_model = gen.partial_order(
    dependencies=[
        (receive_inquiry, information_gathering),
        (information_gathering, choice)
    ]
)