from utils.model_generation import ModelGenerator

gen = ModelGenerator(True, True)

# Activities
send_notification = gen.activity('Send notification')
prepare_financial_statements = gen.activity('Prepare financial statements')
gather_necessary_documents = gen.activity('Gather necessary documents')
check_regulatory_updates = gen.activity('Check regulatory updates')
submit_documents = gen.activity('Submit documents')
review_submission = gen.activity('Review submission')
request_clarifications_of_discrepancies = gen.activity('Request clarifications of discrepancies')
receive_clarifications = gen.activity('Receive clarifications')
evaluate_financial_risks = gen.activity('Evaluate financial risks')
evaluate_operational_risks = gen.activity('Evaluate operational risks')
evaluate_compliance_risks = gen.activity('Evaluate compliance risks')
conduct_data_analysis = gen.activity('Conduct data analysis')
conduct_interviews = gen.activity('Conduct interviews')
perform_site_visits = gen.activity('Perform site visits')
launch_detailed_investigation = gen.activity('Launch detailed investigation')
compile_audit_report = gen.activity('Compile audit report')
review_report_by_audit_director = gen.activity('Review report by audit director')
approve_report = gen.activity('Approve report')
send_report_for_revision = gen.activity('Send report for revision')
update_and_resubmit_report = gen.activity('Update and resubmit report')
distribute_final_report = gen.activity('Distribute final report')
archive_report = gen.activity('Archive report')
close_audit_process = gen.activity('Close audit process')


# Subprocesses
document_preparation = gen.partial_order(dependencies=[(prepare_financial_statements.copy(),), (gather_necessary_documents.copy(),)]) # Copies here!
regulatory_checks = check_regulatory_updates.copy() # Copy here!
initial_submission = gen.partial_order(dependencies=[(document_preparation, submit_documents.copy()), (regulatory_checks, submit_documents.copy())]) #Copies here!


# Corrected loop to avoid reuse of request_clarifications_of_discrepancies
request_clarifications_copy1 = request_clarifications_of_discrepancies.copy()
request_clarifications_copy2 = request_clarifications_of_discrepancies.copy()  #Another copy for the redo part.

review_and_clarification_do = gen.partial_order(dependencies=[(review_submission.copy(), gen.xor(request_clarifications_copy1, None)), (request_clarifications_copy1, receive_clarifications.copy())]) #Copies here!
review_and_clarification_redo = gen.partial_order(dependencies=[(review_submission.copy(), gen.xor(request_clarifications_copy2, None)), (request_clarifications_copy2, receive_clarifications.copy())]) #Redo part needs its own copy.

review_and_clarification = gen.loop(do=review_and_clarification_do, redo=review_and_clarification_redo)


risk_assessment = gen.partial_order(dependencies=[(evaluate_financial_risks.copy(),), (evaluate_operational_risks.copy(),), (evaluate_compliance_risks.copy(),)]) # Copies here!
detailed_investigation = gen.partial_order(dependencies=[(conduct_data_analysis.copy(),), (conduct_interviews.copy(),), (gen.xor(perform_site_visits.copy(), None),)]) # Copies here!
investigation_loop = gen.xor(risk_assessment, detailed_investigation)


# Corrected loop to avoid reuse of review_report_by_audit_director and approve_report
review_report_copy1 = review_report_by_audit_director.copy()
approve_report_copy1 = approve_report.copy()
send_report_for_revision_copy1 = send_report_for_revision.copy()

report_compilation_and_review_do = gen.partial_order(dependencies=[(investigation_loop, compile_audit_report.copy()), (compile_audit_report.copy(), review_report_copy1)]) #Copies here!
report_compilation_and_review_redo = gen.partial_order(dependencies=[(review_report_copy1, gen.xor(approve_report_copy1, send_report_for_revision_copy1)), (send_report_for_revision_copy1, update_and_resubmit_report.copy())]) #Copies here!

report_compilation_and_review = gen.loop(do=report_compilation_and_review_do, redo=report_compilation_and_review_redo)


final_steps = gen.partial_order(dependencies=[(approve_report_copy1, distribute_final_report.copy()), (distribute_final_report.copy(), archive_report.copy()), (archive_report.copy(), close_audit_process.copy())]) #Copies here!

# Combining subprocesses
final_model = gen.partial_order(dependencies=[(send_notification.copy(), initial_submission), (initial_submission, review_and_clarification), (review_and_clarification, report_compilation_and_review), (report_compilation_and_review, final_steps)]) #Copy here!