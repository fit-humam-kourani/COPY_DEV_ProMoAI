from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
receive_inquiry = gen.activity('Receive customer inquiry')
collect_info = gen.activity('Collect customer information')
address_concerns = gen.activity('Address customer concerns or questions')
interest_check = gen.activity('Check customer interest') # Implicit decision point
guide_selection = gen.activity('Guide customer in selecting product/service')
provide_quote = gen.activity('Provide quote')
approve_quote = gen.activity('Check quote approval') # Implicit decision point
place_order = gen.activity('Place order')
record_order = gen.activity('Record order in system')
send_confirmation = gen.activity('Send order confirmation to customer')
terminate = gen.activity('Terminate process')


# Subprocesses
info_gathering = gen.partial_order(dependencies=[(receive_inquiry, collect_info), (collect_info, address_concerns), (address_concerns, interest_check)])
post_interest = gen.partial_order(dependencies=[(guide_selection, provide_quote),(provide_quote, approve_quote)])
order_processing = gen.partial_order(dependencies=[(place_order, record_order), (record_order, send_confirmation)])

# Combining submodels with choices and sequence
initial_choice = gen.xor(post_interest, terminate)
final_sequence = gen.partial_order(dependencies=[(info_gathering, initial_choice), (initial_choice, order_processing)])


final_model = final_sequence