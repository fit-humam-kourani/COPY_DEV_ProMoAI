from utils.model_generation import ModelGenerator

gen = ModelGenerator(True, True)

# Activities
submit_request = gen.activity('Submit IT solution request')
assess_compatibility = gen.activity('Assess compatibility')
evaluate_costs = gen.activity('Evaluate cost and resource needs')
approve_request = gen.activity('Approve request')
reject_request = gen.activity('Reject request')
procure_tools = gen.activity('Procure necessary tools or licenses')
install_solution = gen.activity('Install the solution')
test_solution = gen.activity('Test solution')
rollout_solution = gen.activity('Roll out solution to requesting department')
provide_training = gen.activity('Provide training')
provide_support = gen.activity('Provide support for troubleshooting')

# Create copies of activities to avoid reuse.  Making sure to copy *every* activity used more than once.
approve_request_assessment_copy = approve_request.copy()
approve_request_decision_copy = approve_request.copy()
procure_tools_copy = procure_tools.copy()
install_solution_copy = install_solution.copy()
test_solution_copy = test_solution.copy()
rollout_solution_copy = rollout_solution.copy()
provide_training_copy = provide_training.copy()
reject_request_copy = reject_request.copy()


#Partial order for assessment phase
assessment_poset = gen.partial_order(dependencies=[(assess_compatibility, approve_request_assessment_copy), (evaluate_costs, approve_request_assessment_copy)])

#Choice based on assessment
decision_poset = gen.xor(approve_request_decision_copy, reject_request_copy)

#Partial order for post-approval phase
post_approval_poset = gen.partial_order(dependencies=[(approve_request_decision_copy, procure_tools_copy), (procure_tools_copy, install_solution_copy), (install_solution_copy, test_solution_copy), (test_solution_copy, rollout_solution_copy), (rollout_solution_copy, provide_training_copy)])

#Optional training
optional_training = gen.xor(provide_training_copy, None)

#Final partial order incorporating optional training and support
final_poset = gen.partial_order(dependencies=[(submit_request, assessment_poset), (assessment_poset, decision_poset), (approve_request_decision_copy, post_approval_poset), (post_approval_poset, optional_training), (post_approval_poset, provide_support), (reject_request_copy,)])

final_model = final_poset