from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
customer_places_order_phone = gen.activity('Customer places order over the phone')
customer_places_order_online = gen.activity('Customer places order online')
generate_and_send_order_confirmation = gen.activity('Generate and send order confirmation')
pick_and_pack_items = gen.activity('Pick and pack items')
generate_shipping_label = gen.activity('Generate shipping label')
hand_over_order_to_logistics = gen.activity('Hand over order to logistics provider')
monitor_shipment = gen.activity('Monitor shipment')
send_tracking_information = gen.activity('Send tracking information to customer')
successful_delivery = gen.activity('Successful delivery')
process_customer_feedback = gen.activity('Process customer feedback or returns')


# Order Placement (XOR Choice)
order_placement = gen.xor(customer_places_order_phone, customer_places_order_online)

# Main Process Sequence
main_sequence = gen.partial_order(dependencies=[
    (order_placement, generate_and_send_order_confirmation),
    (generate_and_send_order_confirmation, pick_and_pack_items),
    (pick_and_pack_items, generate_shipping_label),
    (generate_shipping_label, hand_over_order_to_logistics),
    (hand_over_order_to_logistics, monitor_shipment),
    (monitor_shipment, send_tracking_information),
    (send_tracking_information, successful_delivery)
])


# Optional Feedback/Returns
optional_feedback = gen.xor(process_customer_feedback, None)

#Combine main sequence and optional feedback
final_model = gen.partial_order(dependencies=[(main_sequence, optional_feedback)])