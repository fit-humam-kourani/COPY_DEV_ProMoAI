from utils.model_generation import ModelGenerator

gen = ModelGenerator()

# Activities
plan = gen.activity('Plan how to cook')
gather = gen.activity('Gather ingredients')
boil_water = gen.activity('Boil salted water')
boil_spaghetti = gen.activity('Boil spaghetti')
whisk = gen.activity('Whisk egg yolks, Parmesan, and pepper')
saute = gen.activity('Saute pancetta until crispy')
mix = gen.activity('Mix with egg mixture and pancetta')
pour = gen.activity('Pour egg yolk and cheese mixture')
plate = gen.activity('Plate and garnish dish')
enjoy = gen.activity('Enjoy Spaghetti Carbonara')


# Partial orders and loops
poset_1 = gen.partial_order(dependencies=[(boil_water,), (gather,)]) # Gather and boil water concurrently
poset_2 = gen.partial_order(dependencies=[(boil_spaghetti, whisk), (boil_spaghetti, saute)]) # Whisk and saute happen after spaghetti boils, concurrently

whisk_copy = whisk.copy() # Create a copy of whisk to avoid reuse
saute_copy = saute.copy() # Create a copy of saute to avoid reuse

poset_3 = gen.partial_order(dependencies=[(whisk_copy, mix), (saute_copy, mix), (mix, pour), (pour, plate), (plate, enjoy)])

# Combine into a single sequence
final_model = gen.partial_order(dependencies=[(plan, poset_1), (poset_1, poset_2), (poset_2, poset_3)])